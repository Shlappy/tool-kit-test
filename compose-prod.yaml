services:
    nginx:
        image: ${COMPOSE_PROJECT_NAME}-nginx:latest
        build:
            context: ./docker/
            args:
                BUILD_ARGUMENT_ENV: prod
            dockerfile: ./nginx/Dockerfile
        container_name: ${COMPOSE_PROJECT_NAME}-nginx
        restart: always
        ports:
            - "${WEB_PORT_HTTP}:80"
            - "${WEB_PORT_SSL}:443"
        volumes:
            - ./:/var/www/html:ro,cached
            - static-content:/var/www/html/public
        depends_on:
            - symfony
        links:
            - symfony
        networks:
            - symfony

    symfony:
        image: ${COMPOSE_PROJECT_NAME}-symfony:latest
        build:
            context: .
            args:
                BUILD_ARGUMENT_ENV: prod
                HOST_UID: ${HOST_UID}
                HOST_GID: ${HOST_GID}
            dockerfile: ./Dockerfile
        container_name: ${COMPOSE_PROJECT_NAME}-symfony
        restart: always
        volumes:
            - static-content:/var/www/html/public
        depends_on:
            - db
        networks:
            - symfony

    db:
        container_name: db
        image: postgres:17.2-alpine
        ports:
            - "${POSTGRES_PORT}:5432"
        restart: unless-stopped
        volumes:
            - db-data:/postgresql:delegated
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 5
        networks:
            - symfony

    redis:
        image: redis:latest
        container_name: redis
        environment:
            - REDIS_PASSWORD=${REDIS_PASSWORD}
            - REDIS_USER=${REDIS_USER}
            - REDIS_USER_PASSWORD=${REDIS_USER_PASSWORD}
        ports:
            - "6379:6379"
        volumes:
            - redisdata:/data
        command: >
            sh -c '
                mkdir -p /usr/local/etc/redis &&
                echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf &&
                echo "requirepass $REDIS_PASSWORD" >> /usr/local/etc/redis/redis.conf &&
                echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
                echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
                echo "user default on nopass ~* +@all" > /usr/local/etc/redis/users.acl &&
                echo "user $REDIS_USER on >$REDIS_USER_PASSWORD ~* +@all" >> /usr/local/etc/redis/users.acl &&
                redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
            '
        restart: unless-stopped
        tty: true
        stdin_open: true
        networks:
            - symfony

networks:
    symfony:
        name: symfony

volumes:
    redisdata:
        external: false
    db-data:
        external: false
    static-content: