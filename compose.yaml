services:
    nginx:
        image: ${COMPOSE_PROJECT_NAME}-nginx:latest
        build:
            context: ./docker/
            args:
                BUILD_ARGUMENT_ENV: dev
            dockerfile: ./nginx/Dockerfile
        container_name: ${COMPOSE_PROJECT_NAME}-nginx
        restart: always
        ports:
            - "${WEB_PORT_HTTP}:80"
            - "${WEB_PORT_SSL}:443"
        volumes:
            - ./:/var/www/html:ro,cached
        depends_on:
            - symfony
        networks:
            - symfony

    symfony:
        image: ${COMPOSE_PROJECT_NAME}-symfony:latest
        build:
            context: .
            args:
                BUILD_ARGUMENT_ENV: dev
                HOST_UID: ${HOST_UID}
                HOST_GID: ${HOST_GID}
            dockerfile: ./Dockerfile
        container_name: ${COMPOSE_PROJECT_NAME}-symfony
        volumes:
            - ./:/var/www/html:cached
        depends_on:
            - db
        networks:
            - symfony

    db:
        container_name: db
        image: postgres:17.2-alpine
        ports:
            - "${POSTGRES_PORT}:5432"
        restart: unless-stopped
        volumes:
            - ./var/db-data:/postgresql:delegated
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        networks:
            - symfony

    adminer:
        container_name: adminer
        image: adminer
        restart: unless-stopped
        ports:
            - 8080:8080
        networks:
            - symfony

networks:
    symfony:
        name: symfony
